#pragma once

#include "common-chax.h"
#include "save.h"

enum ems_block_max_size {
    EMS_SRAM_SIZE_HEADE = 0x94,
    EMS_SRAM_SIZE_SUS   = 0x2A40,
    EMS_SRAM_SIZE_SAV   = 0x13F8,
    EMS_SRAM_SIZE_ARENA = 0x093C,
    EMS_SRAM_SIZE_PAD   = 0x8,
    EMS_SRAM_SIZE_6     = 0x1000,
};

/**
 * 32K SRAM Save Data Memory Map
 * for function: GetSaveTargetAddress
 */
enum ems_sram_memmap {
    EMS_SRAM_MEMMAP_HEAD = 0x0000,
    EMS_SRAM_MEMMAP_SUS  = EMS_SRAM_MEMMAP_HEAD + EMS_SRAM_SIZE_HEADE,
    EMS_SRAM_MEMMAP_SAV0 = EMS_SRAM_MEMMAP_SUS  + EMS_SRAM_SIZE_SUS,
    EMS_SRAM_MEMMAP_SAV1 = EMS_SRAM_MEMMAP_SAV0 + EMS_SRAM_SIZE_SAV,
    EMS_SRAM_MEMMAP_SAV2 = EMS_SRAM_MEMMAP_SAV1 + EMS_SRAM_SIZE_SAV,
    EMS_SRAM_MEMMAP_5    = EMS_SRAM_MEMMAP_SAV2 + EMS_SRAM_SIZE_SAV,
    EMS_SRAM_MEMMAP_6    = 0x7000,
};

/**
 * Modular Suspand Data
 */
enum msu_memmap_unit {
    MSU_MEMMAP_UNIT_B   = 0,
    MSU_MEMMAP_UNIT_R   = MSU_MEMMAP_UNIT_B + UNIT_SAVE_AMOUNT_BLUE  * 0x34 /* sizeof(struct SuspendPackedUnit) */,
    MSU_MEMMAP_UNIT_G   = MSU_MEMMAP_UNIT_R + UNIT_SAVE_AMOUNT_RED   * 0x34 /* sizeof(struct SuspendPackedUnit) */,
    MSU_MEMMAP_UNIT_END = MSU_MEMMAP_UNIT_G + UNIT_SAVE_AMOUNT_GREEN * 0x34 /* sizeof(struct SuspendPackedUnit) */,
    
    MSU_SIZE_UNIT = MSU_MEMMAP_UNIT_END
};

enum msu_memmap {
    MSU_MEMMAP_PLAYST   = 0,
    MSU_MEMMAP_ACTION   = MSU_MEMMAP_PLAYST   + SUS_SIZE_PLAYST,
    MSU_MEMMAP_TRAP     = MSU_MEMMAP_ACTION   + SUS_SIZE_ACTION,
    MSU_MEMMAP_SUPPLY   = MSU_MEMMAP_TRAP     + SUS_SIZE_TRAP,
    MSU_MEMMAP_PIDSTATS = MSU_MEMMAP_SUPPLY   + SUS_SIZE_SUPPLY,
    MSU_MEMMAP_CHWIN    = MSU_MEMMAP_PIDSTATS + 0x460 /* SUS_SIZE_PIDSTATS */,
    MSU_MEMMAP_PERMFLAG = MSU_MEMMAP_CHWIN    + SUS_SIZE_CHWIN,
    MSU_MEMMAP_TEMPFLAG = MSU_MEMMAP_PERMFLAG + SUS_SIZE_PERMFLAG,
    MSU_MEMMAP_UNIT     = MSU_MEMMAP_TEMPFLAG + SUS_SIZE_TEMPFLAG,
    MSU_MEMMAP_RSV      = MSU_MEMMAP_UNIT     + MSU_SIZE_UNIT,
};

/**
 * Modular Save Data
 */

enum msa_memmap_unit {
    MSA_MEMMAP_UNIT_END = 0 + UNIT_SAVE_AMOUNT_BLUE  * 0x28 /* sizeof(struct SavePackedUnit) */,
    
    MSA_SIZE_UNIT = MSA_MEMMAP_UNIT_END
};

enum msa_memmap {
    MSA_MEMMAP_PLAYST   = 0,
    MSA_MEMMAP_SUPPLY   = MSA_MEMMAP_PLAYST   + SAV_SIZE_PLAYST,
    MSA_MEMMAP_PIDSTATS = MSA_MEMMAP_SUPPLY   + SAV_SIZE_SUPPLY,
    MSA_MEMMAP_CHWIN    = MSA_MEMMAP_PIDSTATS + 0x460 /* SAV_SIZE_PIDSTATS */,
    MSA_MEMMAP_PERMFLAG = MSA_MEMMAP_CHWIN    + SAV_SIZE_CHWIN,
    MSA_MEMMAP_UNIT     = MSA_MEMMAP_PERMFLAG + SAV_SIZE_PERMFLAG,
    MSA_MEMMAP_RSV      = MSA_MEMMAP_UNIT     + MSA_SIZE_UNIT,
};
